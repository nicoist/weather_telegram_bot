import aiohttp
from config import WEATHER_API
from datetime import datetime


# Weather for today
async def get_weather(city: str) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞"""
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API}&units=metric&lang=ru"
    
    # Using aiohttp for asynchronous request
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            if response.status == 200:
                data = await response.json()
                main = data['main']
                weather = data['weather'][0]
                return (
                    f"üåç –ì–æ—Ä–æ–¥: {city}\n"
                    f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(main['temp'])}¬∞C\n"
                    f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {main['humidity']}%\n"
                    f"üìå –û–ø–∏—Å–∞–Ω–∏–µ: {weather['description'].capitalize()}"
                )
            else:
                return "‚ö†Ô∏è –û—à–∏–±–∫–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞."

# Weather for 5 days
async def get_five_day_forecast(city: str) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ 5 –¥–Ω–µ–π –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞"""
    url = f"http://api.openweathermap.org/data/2.5/forecast?q={city}&appid={WEATHER_API}&units=metric&lang=ru"

    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            if response.status == 200:
                data = await response.json()
                forecast_list = data['list']
                forecast_text = f"üóì –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 5 –¥–Ω–µ–π –≤ –≥–æ—Ä–æ–¥–µ {city}:\n"

                # We go through 5 days (every 3 hours, i.e. 5 days = 5*8 = 40 data)
                for forecast in forecast_list[::8]:  # step 8, since data arrives at 3-hour intervals
                    date = datetime.utcfromtimestamp(forecast['dt']).strftime('%d-%m-%Y %H:%M')
                    temp = round(forecast['main']['temp'])
                    weather_desc = forecast['weather'][0]['description'].capitalize()

                    forecast_text += (
                        f"üìÖ –í—Ä–µ–º—è: {date}\n"
                        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
                        f"üìå –û–ø–∏—Å–∞–Ω–∏–µ: {weather_desc}\n\n"
                    )

                return forecast_text
            else:
                return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–≥–Ω–æ–∑–µ, —Å—Ç–∞—Ç—É—Å: {response.status}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞."